// require express
var express = require("express");
// path module
var path = require("path");
// create the express app
var app = express();

//require mongoose
var mongoose = require('mongoose');
//connect to mongoose server
mongoose.connect('mongodb://localhost/%%!!NAME OF DB!!%%');
mongoose.Promise = global.Promise;
//basic user schema (use as blueprint)
var UserSchema = new mongoose.Schema({
    name: {type: String, required: true, minlength: 6},
    age: {type: Number, min: 1, max: 150}
}, {timestamps: true})
mongoose.model('User', UserSchema); // We are setting this Schema in our Models as 'User'
var User = mongoose.model('User')

var bodyParser = require('body-parser');
// use it!
app.use(bodyParser.urlencoded({ extended: true }));

// static content
app.use(express.static(path.join(__dirname, "./static")));
// setting up ejs and our views folder
app.set('views', path.join(__dirname, './views'));
app.set('view engine', 'ejs');

// root route to render the index.ejs view
app.get('/', function(req, res) {
    res.render("index");
})
// post route for adding a user
app.post('/users', function(req, res) {
    console.log("POST DATA", req.body);
 // This is where we would add the user to the database
 // Then redirect to the root route
 res.redirect('/');
})
// tell the express app to listen on port 8192
var server = app.listen(8192, function() {
    console.log("Listening on port 8192");
});

var io = require('socket.io').listen(server);

io.sockets.on('connection', function (socket) {
    console.log("WE ARE USING SOCKETS!");
    console.log(socket.id);
    socket.on("button_clicked", function(data){

    });
});
